/*
 * EasyBimehLanding.Tests
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Threading.Tasks;
using Newtonsoft.Json.Converters;
using EasyBimehLanding.Standard;
using EasyBimehLanding.Standard.Utilities; 
using EasyBimehLanding.Standard.Http.Client;
using EasyBimehLanding.Standard.Http.Response;
using EasyBimehLanding.Tests.Helpers;
using NUnit.Framework;
using EasyBimehLanding.Standard;
using EasyBimehLanding.Standard.Controllers;
using EasyBimehLanding.Standard.Exceptions;

namespace EasyBimehLanding.Tests
{
    [TestFixture]
    public class FooterControllerTest : ControllerTestBase
    {
        /// <summary>
        /// Controller instance (for all tests)
        /// </summary>
        private static FooterController controller;

        /// <summary>
        /// Setup test class
        /// </summary>
        [SetUp]
        public static void SetUpClass()
        {
            controller = GetClient().Footer;
        }

        /// <summary>
        /// TODO: Add Description 
        /// </summary>
        [Test]
        public async Task TestPortalLandingContactAbout() 
        {
            // Parameters for the API call
            string xApiKey = "d6dfd932-75d8-e911-811a-000c294ecf01";

            // Perform API call
            Standard.Models.BaseModelPortalLandingContactAbout result = null;

            try
            {
                result = await controller.GetPortalLandingContactAboutAsync(xApiKey);
            }
            catch(APIException) {};

            // Test response code
            Assert.AreEqual(200, httpCallBackHandler.Response.StatusCode,
                    "Status should be 200");

            // Test headers
            Dictionary<string, string> headers = new Dictionary<string, string>();
            headers.Add("Date", null);
            headers.Add("Content-Type", null);
            headers.Add("Content-Length", null);
            headers.Add("Connection", null);
            headers.Add("Keep-Alive", null);
            headers.Add("Cache-Control", null);
            headers.Add("Pragma", null);
            headers.Add("Content-Encoding", null);
            headers.Add("Expires", null);
            headers.Add("X-StackifyID", null);
            headers.Add("X-AspNet-Version", null);
            headers.Add("X-Powered-By", null);
            headers.Add("Server", null);
            headers.Add("AR-PoweredBy", null);
            headers.Add("ar-sid", null);
            headers.Add("AR-ATIME", null);
            headers.Add("AR-CACHE", null);
            headers.Add("AR-Request-ID", null);

            Assert.IsTrue(TestHelper.AreHeadersProperSubsetOf (
                    headers, httpCallBackHandler.Response.Headers),
                    "Headers should match");

            // Test whether the captured response is as we expected
            Assert.IsNotNull(result, "Result should exist");

            Assert.IsTrue(TestHelper.IsJsonObjectProperSubsetOf(
                    "{\r\n  \"isSuccess\": true,\r\n  \"status\": 200,\r\n  \"message\": {\r\n    \"licensed\": false,\r\n    \"insuranceGroup\": [],\r\n    \"insuranceType\": [],\r\n    \"summaryCards\": [],\r\n    \"summaryNotics\": [],\r\n    \"imageAlbums\": [],\r\n    \"videoGalleries\": [],\r\n    \"insuranceCentre\": {\r\n      \"id\": 2,\r\n      \"personId\": \"fbddedc4-0804-409d-91ee-cb062ef33f42\",\r\n      \"personalityType\": 0,\r\n      \"insuranceCentreType\": 5,\r\n      \"registerStatus\": 99,\r\n      \"centerName\": \"میز کار  مجازی  بیمه \",\r\n      \"centerCode\": \"1020\",\r\n      \"branchCount\": null,\r\n      \"registrationNumber\": \"4121\",\r\n      \"freeUseGoldenPackExpireDate\": \"2019-06-17T12:46:51.763\",\r\n      \"cityId\": 329,\r\n      \"cashPayment\": true,\r\n      \"showInEasyBimeh\": true,\r\n      \"installmentsPayment\": false,\r\n      \"isInitialApplicant\": false,\r\n      \"branchsCount\": 9,\r\n      \"employeesCount\": 20,\r\n      \"zoneId\": null,\r\n      \"smsChargingStock\": null,\r\n      \"independentBranch\": null,\r\n      \"disableReason\": null,\r\n      \"termsConditions\": null,\r\n      \"disableReasonDescription\": null,\r\n      \"unlimitedAccount\": null,\r\n      \"whiteLabel\": false,\r\n      \"phone\": \"02188207290\",\r\n      \"fax\": \"\",\r\n      \"address\": \"استان تهران، تهران، خیابان گاندی، خیابان پانزدهم، شماره15، واحد 1\",\r\n      \"zipCode\": \"\",\r\n      \"email\": \"hfz1.co@gmail.com\",\r\n      \"paymentUrl\": null,\r\n      \"callbackUrl\": null,\r\n      \"callbackUrlWhitelabel\": null,\r\n      \"webSite\": \"\",\r\n      \"latitude\": 35.6892,\r\n      \"longitude\": 51.389,\r\n      \"isActive\": true,\r\n      \"insuranceCentreId\": null,\r\n      \"cityRegionId\": null,\r\n      \"provinceId\": 8,\r\n      \"cityName\": \"تهران\",\r\n      \"metaMediaActivityLicenceId\": 20453,\r\n      \"metaMediaActivityLicenceUrl\": null,\r\n      \"createOnPersianDate\": \"1397/05/05 00:00\",\r\n      \"insuranceCompanyId\": [\r\n        31,\r\n        32,\r\n        33,\r\n        34,\r\n        35,\r\n        36,\r\n        37,\r\n        39\r\n      ],\r\n      \"activePackageId\": 9,\r\n      \"packageActivationLastDate\": \"2019-08-31T14:49:47.55\",\r\n      \"licenseApiKey\": null,\r\n      \"verifyRequestUrl\": null,\r\n      \"onlinePayment\": true,\r\n      \"cardToCardPayment\": true,\r\n      \"bankTransferPayment\": true,\r\n      \"cashOnDelivery\": true,\r\n      \"bankTransferSameOnlinePaymentInfo\": false,\r\n      \"bankParamId\": 109,\r\n      \"accountOwner\": \"فرزاد\",\r\n      \"accountNumber\": \"1761496408\",\r\n      \"iban\": \"550120000000001761496408\",\r\n      \"cardBankParamId\": 109,\r\n      \"cardAccountOwner\": \"فرزاد\",\r\n      \"cardAccountNumber\": \"6104333344445555\",\r\n      \"bankTransferParamId\": 109,\r\n      \"bankTransferAccountOwner\": \"فرزاد\",\r\n      \"bankTransferAccountNumber\": \"1761496408\",\r\n      \"bankTransferIBAN\": \"550120000000001761496408\"\r\n    },\r\n    \"insuranceCentrePortal\": {\r\n      \"insuranceCentreId\": 2,\r\n      \"centreName\": \"میز کار  مجازی  بیمه \",\r\n      \"subDomainName\": \"hfz1\",\r\n      \"title\": \"\",\r\n      \"subTitle\": \"\",\r\n      \"contactUs\": null,\r\n      \"aboutUs\": \"\",\r\n      \"ourService\": \"<div itemprop=\\\"mainContentOfPage\\\"><p>تمامی بیمه نامه ها با اعمال حداکثر تخفیفات قانونی ویژه ، با تسهیل در پرداخت حق بیمه (بصورت قسطی) توسط هریک از شرکتهای بیمه مورد نظر شما صادر خواهد گردید.</p></div>\",\r\n      \"termsConditions\": null,\r\n      \"copyright\": null,\r\n      \"headerTitle\": null,\r\n      \"headerBody\": null,\r\n      \"footerColor\": null,\r\n      \"backgroundColor\": null,\r\n      \"licensed\": false,\r\n      \"defaultLogo\": null,\r\n      \"titleColor\": \"#ffffff\",\r\n      \"subTitleColor\": \"#ffffff\",\r\n      \"eTrustSymbol\": null,\r\n      \"digitalMediaOrganizerSymbol\": null,\r\n      \"googlePlus\": \"http://instagram.com\",\r\n      \"telegram\": \"http://telegram.com\",\r\n      \"instagram\": \"http://instagram.com\",\r\n      \"faceBook\": \"http://instagram.com\",\r\n      \"twitter\": \"http://instagram.com\",\r\n      \"saturdayToWednesdayFromHour\": null,\r\n      \"saturdayToWednesdayToHour\": null,\r\n      \"thursdayFromHour\": null,\r\n      \"thursdayToHour\": null,\r\n      \"fridayFromHour\": null,\r\n      \"fridayToHour\": null,\r\n      \"metaMediaFileHeaderId\": 20817,\r\n      \"metaMediaFileHeaderUrl\": \"https://media.easybimeh.com//Easybimeh/FileManager/InsuranceCentre/hfz1/636780551712391762.jpg\",\r\n      \"metaMediaFileLogoId\": 81580,\r\n      \"metaMediaFileLogoUrl\": \"https://media.easybimeh.com//Easybimeh/FileManager/InsuranceCentre/hfz1/636994283394589289.png\",\r\n      \"metaMediaFileFaviconId\": 162557,\r\n      \"metaMediaFileFaviconUrl\": \"https://media.easybimeh.com//Easybimeh/FileManager/InsuranceCentre/hfz1/637082986134004537.jpeg\",\r\n      \"metaMediaFileFooterId\": null,\r\n      \"metaMediaFileFooterUrl\": null\r\n    }\r\n  },\r\n  \"extraData\": null,\r\n  \"exception\": null\r\n}", 
                    TestHelper.ConvertStreamToString(httpCallBackHandler.Response.RawBody), 
                    false, true, false),
                    "Response body should have matching keys");
        }

        /// <summary>
        /// TODO: Add Description 
        /// </summary>
        [Test]
        public async Task TestFaqInsuranceCentre() 
        {
            // Parameters for the API call
            string xApiKey = "d6dfd932-75d8-e911-811a-000c294ecf01";

            // Perform API call
            Standard.Models.BaseModelFaqInsuranceCentre result = null;

            try
            {
                result = await controller.GetFaqInsuranceCentreAsync(xApiKey);
            }
            catch(APIException) {};

            // Test response code
            Assert.AreEqual(200, httpCallBackHandler.Response.StatusCode,
                    "Status should be 200");

            // Test headers
            Dictionary<string, string> headers = new Dictionary<string, string>();
            headers.Add("Date", null);
            headers.Add("Content-Type", null);
            headers.Add("Content-Length", null);
            headers.Add("Connection", null);
            headers.Add("Keep-Alive", null);
            headers.Add("Cache-Control", null);
            headers.Add("Pragma", null);
            headers.Add("Content-Encoding", null);
            headers.Add("Expires", null);
            headers.Add("X-StackifyID", null);
            headers.Add("X-AspNet-Version", null);
            headers.Add("X-Powered-By", null);
            headers.Add("Server", null);
            headers.Add("AR-PoweredBy", null);
            headers.Add("ar-sid", null);
            headers.Add("AR-ATIME", null);
            headers.Add("AR-CACHE", null);
            headers.Add("AR-Request-ID", null);

            Assert.IsTrue(TestHelper.AreHeadersProperSubsetOf (
                    headers, httpCallBackHandler.Response.Headers),
                    "Headers should match");

            // Test whether the captured response is as we expected
            Assert.IsNotNull(result, "Result should exist");

            Assert.IsTrue(TestHelper.IsJsonObjectProperSubsetOf(
                    "{\r\n  \"isSuccess\": true,\r\n  \"status\": 200,\r\n  \"message\": [\r\n    {\r\n      \"id\": 1009,\r\n      \"insuranceCentreId\": 2,\r\n      \"question\": \"بیمه شخص ثالث چیست؟\",\r\n      \"answer\": \"بیمه شخص ثالث یکی از انواع بیمه خودرو است که خسارات جانی و مالی وارد شده به اشخاص زیان‌دیده را پرداخت می‌کند. داشتن بیمه شخص ثالث برای تمامی وسایل نقلیه موتوری اجباری است.\",\r\n      \"sortPriority\": 0,\r\n      \"questionGroupParamId\": 2,\r\n      \"isActive\": true,\r\n      \"theInsuranceCentre\": null,\r\n      \"theQuestionGroupParam\": null,\r\n      \"createOn\": \"2018-06-17T00:00:00\",\r\n      \"updateOn\": \"2019-04-13T11:17:49.51\",\r\n      \"createdBy\": \"fbddedc4-0804-409d-91ee-cb062ef33f42\",\r\n      \"updatedBy\": \"fbddedc4-0804-409d-91ee-cb062ef33f42\",\r\n      \"createOnPersianDate\": \"1397/03/27 00:00\",\r\n      \"updateOnPersianDate\": \"1398/01/24 11:17\"\r\n    },\r\n    {\r\n      \"id\": 1010,\r\n      \"insuranceCentreId\": 2,\r\n      \"question\": \"آیا پس از تایید شماره همراه در مراحل ثبت نام، میتوانم شماره خود را تغییر دهم؟\",\r\n      \"answer\": \"شما زمانی میتوانید شماره خود را تغییر دهید که شماره ی همراه جدید نیز تایید شود. \\r\\n\\r\\n در صورتی که  شماره همراه خود را به فردی دیگر واگذار کردید، جهت جلوگیری از سواستفاده یا مشکلات احتمالی، شماره موبایل خود را در پروفایل تغییر داده و شماره جدیدی ثبت نمایید.\",\r\n      \"sortPriority\": null,\r\n      \"questionGroupParamId\": 2,\r\n      \"isActive\": true,\r\n      \"theInsuranceCentre\": null,\r\n      \"theQuestionGroupParam\": null,\r\n      \"createOn\": \"2018-06-19T10:34:51.217\",\r\n      \"updateOn\": \"2019-04-13T11:17:49.51\",\r\n      \"createdBy\": \"fbddedc4-0804-409d-91ee-cb062ef33f42\",\r\n      \"updatedBy\": null,\r\n      \"createOnPersianDate\": \"1397/03/29 10:34\",\r\n      \"updateOnPersianDate\": \"1398/01/24 11:17\"\r\n    },\r\n    {\r\n      \"id\": 1012,\r\n      \"insuranceCentreId\": 2,\r\n      \"question\": \"منظور از شخص ثالث در بیمه شخص ثالث چیست؟\",\r\n      \"answer\": \"در بیمه شخص ثالث، شخص اول شخص بیمه‌گزار (کسی که برای وسیله نقلیه‌ای بیمه شخص ثالث خریداری می‌کند)، شخص ثانی، بیمه‌گر یا شرکت بیمه و شخص ثالث فرد یا افرادی هستند در حادثه رانندگی زیان دیده‌اند به جز راننده مقصر.\",\r\n      \"sortPriority\": null,\r\n      \"questionGroupParamId\": 2,\r\n      \"isActive\": true,\r\n      \"theInsuranceCentre\": null,\r\n      \"theQuestionGroupParam\": null,\r\n      \"createOn\": \"2018-08-19T16:02:22.87\",\r\n      \"updateOn\": \"2019-04-13T11:17:49.51\",\r\n      \"createdBy\": \"fbddedc4-0804-409d-91ee-cb062ef33f42\",\r\n      \"updatedBy\": null,\r\n      \"createOnPersianDate\": \"1397/05/28 16:02\",\r\n      \"updateOnPersianDate\": \"1398/01/24 11:17\"\r\n    },\r\n    {\r\n      \"id\": 1013,\r\n      \"insuranceCentreId\": 2,\r\n      \"question\": \"نداشتن بیمه شخص ثالث، چه مشکلاتی برای من ایجاد می‌کند؟\",\r\n      \"answer\": \"اولاً حرکت وسیله نقلیه بدون داشتن بیمه شخص ثالث، ممنوع است و پلیس راهنمایی رانندگی در هر زمانی که متوجه نداشتن بیمه شخص ثالث یک وسیله نقلیه شود، می‌تواند آن را توقیف کند. درصورتی‌که یک وسیله نقلیه دارای بیمه‌نامه شخص ثالث نباشد و دچار حادثه شود، راننده تا زمان پرداخت خسارت جانی و مالی اشخاص زیان‌دیده، زندانی می‌شود. همچنین، در هر زمان که راننده بخواهد بیمه شخص ثالث بخرد، باید جریمه دیرکرد آن را که قابل بخشش نیست، بپردازد. از سوی دیگر، فروش وسیله نقلیه فاقد بیمه شخص ثالث، امکان‌پذیر نیست.\",\r\n      \"sortPriority\": null,\r\n      \"questionGroupParamId\": 2,\r\n      \"isActive\": true,\r\n      \"theInsuranceCentre\": null,\r\n      \"theQuestionGroupParam\": null,\r\n      \"createOn\": \"2018-08-19T16:02:50.603\",\r\n      \"updateOn\": \"2019-04-13T11:17:49.51\",\r\n      \"createdBy\": \"fbddedc4-0804-409d-91ee-cb062ef33f42\",\r\n      \"updatedBy\": null,\r\n      \"createOnPersianDate\": \"1397/05/28 16:02\",\r\n      \"updateOnPersianDate\": \"1398/01/24 11:17\"\r\n    },\r\n    {\r\n      \"id\": 1014,\r\n      \"insuranceCentreId\": 2,\r\n      \"question\": \"بیمه شخص ثالث برای من چه فایده‌ای دارد؟\",\r\n      \"answer\": \"علاوه بر آنکه خرید بیمه شخص ثالث برای تمامی دارندگان وسایل نقلیه موتوری الزامی است، داشتن این بیمه می‌تواند خسارات مالی و جانی ناشی از بروز حادثه را که می‌تواند تا مرز صدها میلیون تومان باشد، جبران نماید.\",\r\n      \"sortPriority\": null,\r\n      \"questionGroupParamId\": 2,\r\n      \"isActive\": true,\r\n      \"theInsuranceCentre\": null,\r\n      \"theQuestionGroupParam\": null,\r\n      \"createOn\": \"2018-08-19T16:03:30.28\",\r\n      \"updateOn\": \"2019-04-13T11:17:49.51\",\r\n      \"createdBy\": \"fbddedc4-0804-409d-91ee-cb062ef33f42\",\r\n      \"updatedBy\": null,\r\n      \"createOnPersianDate\": \"1397/05/28 16:03\",\r\n      \"updateOnPersianDate\": \"1398/01/24 11:17\"\r\n    },\r\n    {\r\n      \"id\": 1015,\r\n      \"insuranceCentreId\": 2,\r\n      \"question\": \"نداشتن بیمه شخص ثالث، چه مشکلاتی برای من ایجاد می‌کند؟\",\r\n      \"answer\": \"اولاً حرکت وسیله نقلیه بدون داشتن بیمه شخص ثالث، ممنوع است و پلیس راهنمایی رانندگی در هر زمانی که متوجه نداشتن بیمه شخص ثالث یک وسیله نقلیه شود، می‌تواند آن را توقیف کند. درصورتی‌که یک وسیله نقلیه دارای بیمه‌نامه شخص ثالث نباشد و دچار حادثه شود، راننده تا زمان پرداخت خسارت جانی و مالی اشخاص زیان‌دیده، زندانی می‌شود. همچنین، در هر زمان که راننده بخواهد بیمه شخص ثالث بخرد، باید جریمه دیرکرد آن را که قابل بخشش نیست، بپردازد. از سوی دیگر، فروش وسیله نقلیه فاقد بیمه شخص ثالث، امکان‌پذیر نیست.\",\r\n      \"sortPriority\": null,\r\n      \"questionGroupParamId\": 2,\r\n      \"isActive\": true,\r\n      \"theInsuranceCentre\": null,\r\n      \"theQuestionGroupParam\": null,\r\n      \"createOn\": \"2018-08-19T16:03:55.527\",\r\n      \"updateOn\": \"2019-04-13T11:17:49.51\",\r\n      \"createdBy\": \"fbddedc4-0804-409d-91ee-cb062ef33f42\",\r\n      \"updatedBy\": null,\r\n      \"createOnPersianDate\": \"1397/05/28 16:03\",\r\n      \"updateOnPersianDate\": \"1398/01/24 11:17\"\r\n    }\r\n  ],\r\n  \"extraData\": null,\r\n  \"exception\": null\r\n}", 
                    TestHelper.ConvertStreamToString(httpCallBackHandler.Response.RawBody), 
                    false, true, false),
                    "Response body should have matching keys");
        }

        /// <summary>
        /// TODO: Add Description 
        /// </summary>
        [Test]
        public async Task TestInsurancePolicyTracking() 
        {
            // Parameters for the API call
            int trackingCode = 213981083;
            long nationalCode = 3080115309;
            string xApiKey = "d6dfd932-75d8-e911-811a-000c294ecf01";

            // Perform API call
            Standard.Models.BaseModelInsurancePolicyTracking result = null;

            try
            {
                result = await controller.GetInsurancePolicyTrackingAsync(trackingCode, nationalCode, xApiKey);
            }
            catch(APIException) {};

            // Test response code
            Assert.AreEqual(200, httpCallBackHandler.Response.StatusCode,
                    "Status should be 200");

            // Test headers
            Dictionary<string, string> headers = new Dictionary<string, string>();
            headers.Add("Date", null);
            headers.Add("Content-Type", null);
            headers.Add("Transfer-Encoding", null);
            headers.Add("Connection", null);
            headers.Add("Keep-Alive", null);
            headers.Add("Vary", null);
            headers.Add("Cache-Control", null);
            headers.Add("Pragma", null);
            headers.Add("Expires", null);
            headers.Add("X-StackifyID", null);
            headers.Add("X-AspNet-Version", null);
            headers.Add("X-Powered-By", null);
            headers.Add("Server", null);
            headers.Add("AR-PoweredBy", null);
            headers.Add("ar-sid", null);
            headers.Add("AR-ATIME", null);
            headers.Add("AR-CACHE", null);
            headers.Add("AR-Request-ID", null);
            headers.Add("Content-Encoding", null);

            Assert.IsTrue(TestHelper.AreHeadersProperSubsetOf (
                    headers, httpCallBackHandler.Response.Headers),
                    "Headers should match");

            // Test whether the captured response is as we expected
            Assert.IsNotNull(result, "Result should exist");

            Assert.IsTrue(TestHelper.IsJsonObjectProperSubsetOf(
                    "{\r\n  \"isSuccess\": true,\r\n  \"status\": 200,\r\n  \"message\": {\r\n    \"id\": 1129,\r\n    \"aliasName\": \"کاظم ملکی\",\r\n    \"status\": \"ثبت اولیه\",\r\n    \"createOnPersianDate\": \"1398/04/12 13:00\",\r\n    \"centerName\": \"کارگزاری بیمه حافظان آرامش\",\r\n    \"insurancePolicyType\": 8,\r\n    \"insuranceType\": \"بیمه درمان خانواده\",\r\n    \"price\": 1890060,\r\n    \"paymented\": null\r\n  },\r\n  \"extraData\": null,\r\n  \"exception\": null\r\n}", 
                    TestHelper.ConvertStreamToString(httpCallBackHandler.Response.RawBody), 
                    false, true, false),
                    "Response body should have matching keys");
        }

    }
}